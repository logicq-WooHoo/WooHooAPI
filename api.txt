1. User Registration:
POST: http://127.0.0.1:8090/api/user/registration
{
  "firstName": "Nana",
  "lastName": "Patekar",
  "mobileNo": 4586123121,
  "type":"customer",
  "addresses": [{
  	"flatNo":"B301",
  	"societyName":"Karishma",
  	"road":"F.C. Road",
  	"city":"Pune",
  	"state":"Maharashtra",
  	"country":"India",	
  	"pinCode": 411005,
  	"type":"user"
  }]
}

2. Add Restaurant Details
POST: http://127.0.0.1:8090/api/restaurant/details
{
  "restaurantName": "Vaishali",
  "registrationNumber": "1058",
  "address": {
  	"road":"F.C. Road",
  	"city":"Pune",
  	"state":"Maharashtra",
  	"country":"India",	
  	"pinCode": 411005,
  	"type":"restaurant"
  },
  "userInformation" : {
  	"userId" : 1
  }
}

3. Get all Restaurant Details
GET: http://127.0.0.1:8090/api/restaurant/details/

4. Get particular Restaurant Details using ID
GET: http://127.0.0.1:8090/api/restaurant/details/1

5. Update/Edit Restaurant Details
PUT: http://127.0.0.1:8090/api/restaurant/details/2
{
  "restaurantName": "Roopali",
  "registrationNumber": "1056",
  "address": {
  	"road":"F.C. Road",
  	"city":"Pune",
  	"state":"Maharashtra",
  	"country":"India",	
  	"pinCode": 411005,
  	"type":"restaurant"
  },
  "userInformation" : {
  	"userId" : 1
  }
}

6. Delete Restaurant Details
DELETE: http://127.0.0.1:8090/api/restaurant/details/3

7. Add Menu
POST: http://127.0.0.1:8090/api/restaurant/menu
{
	"restaurantDetailsId":1,
	"menuItems":[
		{
			"foodServiceTypeId":1,
			"foodCategoryId":1,
			"itemName":"Poha",
			"price":20.00
		}]
}

8. Restaurant search
POST: http://127.0.0.1:8090/api/user/restaurant/search

8.1: Filter- foodCategory, rating
{
	"city":"Pune",
	"area":"kothrud",
	"foodCategory":"Tandoori",
	"rating":4
}

8.2: Filter- restaurant type (American, Italian etc)
{
	"city":"Pune",
	"restaurantTypeId":2
}

8.3 :
{
	"latitude":18.5075353,
	"longitude":73.807182
}

8.4: restaurant search on the basis of restaurantIds:
{
	"restaurantIds":[1,2]
}

8.5: restaurant search on the basis of foodServiceTypes:
{
	"city":"Pune",
	"foodServiceTypes":["Lunch","Breakfast"]
}

8.6: restaurant search on the basis of menu:
{
	"city":"Pune",
	"foodCategory":"aloo methi"
}

or 

{
	"city":"Pune",
	"foodCategory":"aloo"
}

8.7  Same key foodCategory used for restaurant name while searching restaurant
{
	"city":"Pune",
	"foodCategory":"kinara"
}

8.8: restaurant search on the basis of restaurant name:
{
	"city":"Pune",
    "restaurantName": "Hotel Kina"
}

9. Get Food Categories like Tandoori, Chinees (Inventory Call)
GET: http://127.0.0.1:8090/api/getfoodcategories

10. Get Delivery Partners like Food Panda, Swiggy (Inventory Call)
GET: http://127.0.0.1:8090/api/getdeliverypartners

11. Get Food Service Types  like Breakfast, Lunch etc(Inventory Call)
GET: http://127.0.0.1:8090/api/getfoodservicetypes

12. Get Restaurant Types like American, Italian etc(Inventory Call)
GET: http://127.0.0.1:8090/api/getrestauranttypes

13. Select Restaurant Menu, after search restaurant
GET: http://127.0.0.1:8090/api/user/restaurant/selectmenu/{restaurantId}
GET: http://127.0.0.1:8090/api/user/restaurant/selectmenu/1

14. Get Restaurant Ids on the basis of latitude and longitude. On UI, Italian=3 (count)
POST: http://127.0.0.1:8090/api/user/restaurant/searchtype
{
	"latitude":18.5075353,
	"longitude":73.807182
}

15. Place Order
POST: http://127.0.0.1:8090/api/user/placeorder
{
  "userId": 1,
  "addressId": 1,
  "orderDetails": [
    {
      "restaurantId": 1,
      "restaurantName": "Hotel Kinara",
      "deliveryPartnerId": 2,
      "deliveryPartnerName": "Swiggy",
      "menuItems": [
        {
          "id": 1,
          "itemName": "Aloo methi",
          "price": 150,
          "quantity": 2,
          "totalPrice": 300
        }
      ],
      "paymentDetails": {
        "deliveryCharges": 0,
        "discount": 0,
        "grandTotal": 354,
        "subTotal": 300,
        "tax": 54
      }
    },
    {
      "restaurantId": 2,
      "restaurantName": "Samartha Veg",
      "deliveryPartnerId": 2,
      "deliveryPartnerName": "Swiggy",
      "menuItems": [
        {
          "id": 2,
          "itemName": "Kaju Masala",
          "price": 200,
          "quantity": 1,
          "totalPrice": 200
        }
      ],
      "paymentDetails": {
        "deliveryCharges": 0,
        "discount": 0,
        "grandTotal": 236,
        "subTotal": 200,
        "tax": 36
      }
    }
  ]
}

16. Get past orders
GET: http://127.0.0.1:8090/api/user/getpastorders/{userId}
GET: http://127.0.0.1:8090/api/user/getpastorders/2

17. Reorder
GET: http://127.0.0.1:8090/api/user/reorder/{orderId}
GET: http://127.0.0.1:8090/api/user/reorder/BM9TN9

18. Save Payment Card Details
POST: http://127.0.0.1:8090/api/user/savecarddetails
{
	"cardType":"debit",
	"cardNumber": 2345123456789023,
	"expireOn": "07/19",
	"cvv": 123,
	"userId":2
}

19. Get User Profile
GET: http://127.0.0.1:8090/api/user/getmyprofile/{userId}
GET: http://127.0.0.1:8090/api/user/getmyprofile/2
